package com.emp.emp.controller;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.springframework.core.io.InputStreamResource;
import org.springframework.core.io.Resource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.emp.emp.entity.employe;
import com.emp.emp.service.EmpService;



@Controller
public class controller {
	
	@Autowired
	private EmpService empService;

	@GetMapping("/")
	public String index() {
		return "index";
	}
	@GetMapping("/upload")
	public String upload() {
		return "upload";
	}
	
	
	@PostMapping("/upload/file")
	public ResponseEntity<String> uploadExcelFile(@RequestParam("file") MultipartFile file) {
		try {
			empService.saveDataFromExcelFile(file);
			return ResponseEntity.ok("Data saved successfully");
		} catch (Exception e) {
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
					.body("Error occurred while saving data: " + e.getMessage());
		}

	}
	@GetMapping("/emplist")
	public String showEmpList(Model model) {
		List<employe> emp=empService.getAllEmployees();
		model.addAttribute("emp",emp);
		
		return "showEmp";
		
	}
	
	@GetMapping("/approve/{id}")
	public String approveEmp(@PathVariable int id) {
		employe existingEmp = empService.getEmpById(id);
		empService.updateEmp(id,"Approved");
		return "redirect:/emplist";
	}
	
	@GetMapping("/reject/{id}")
	public String rejectEmp(@PathVariable int id) {
		employe existingEmp = empService.getEmpById(id);
		empService.updateEmp(id,"Reject");
		return "redirect:/emplist";
	}
}
